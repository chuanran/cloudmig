package com.ibm.cloud.migration.cmd.tool.utility;

import java.util.ArrayList;
import java.util.List;
import java.util.Scanner;
import org.cloudfoundry.client.lib.domain.CloudServiceOffering;
import org.cloudfoundry.client.lib.domain.CloudServicePlan;

import com.ibm.cloud.migration.appmodel.model.ServiceNode;

public class MapToCFService {
	public static CloudServiceOffering selectServiceOffering(ServiceNode service, List<CloudServiceOffering> serviceOfferings){
		
		CloudServiceOffering chosen_service_offering = null;
		String service_type = service.getServiceType().toString();
		System.out.println("listing service offerings in Cloud Foundry matching with the service type " + service_type + " defined in the captured application model...");
		List<CloudServiceOffering> specfic_offerings = new ArrayList<CloudServiceOffering>();
		for(int i=1; i<=serviceOfferings.size(); i++){
			if(serviceOfferings.get(i-1).getName().contains(service_type)){
				specfic_offerings.add(serviceOfferings.get(i-1));
			}
		}
		//Select the service offering from the cmd line
		int j=0;
		if(specfic_offerings.size()>0){
			for(int i=1; i<=specfic_offerings.size();i++){
				System.out.println(i+"."+specfic_offerings.get(i-1).getName());
				j=i;
			}
		}
		System.out.println(j+1 +". others");
		System.out.println("Selecting service offering to be created:");
		Scanner reader_service=new Scanner(System.in);
		String service_num = reader_service.nextLine();
		
		//if choose other services, just list all the service offerings CF provides, and make another choice
		if(Integer.parseInt(service_num) == j+1){
			for(int i=1 ; i<=serviceOfferings.size(); i++){
				System.out.println(i+"."+serviceOfferings.get(i-1).getName());
			}
			System.out.println("Selecting service offering to be created:");
			Scanner reader_sub_service=new Scanner(System.in);
			String sub_service_num = reader_sub_service.nextLine();
			chosen_service_offering = serviceOfferings.get(Integer.parseInt(sub_service_num)-1);
		} else{
			chosen_service_offering = specfic_offerings.get(Integer.parseInt(service_num)-1);
		}
		return chosen_service_offering;
	}
	
	public static CloudServicePlan selectServicePlan(CloudServiceOffering selectedService){
		CloudServicePlan service_plan = null;
		System.out.println("Listing service plans of " + selectedService.getName() + "...");
		for(int i=1;i<=selectedService.getCloudServicePlans().size(); i++){
			System.out.println(i+"."+selectedService.getCloudServicePlans().get(i-1));
		}
		System.out.println("Selecting service plan:");
		Scanner reader_plan=new Scanner(System.in);
		String line_plan_num = reader_plan.nextLine();
		service_plan = selectedService.getCloudServicePlans().get((Integer.parseInt(line_plan_num)-1));
		return service_plan;
		
	}
	
//	public void handle() throws IOException{
//		//read the target_url  from env.properties(which was generated by the first login to the cloud) under project
//		Properties prop = new Properties();
//		InputStream fis = new FileInputStream(PROPERTY_FILE);
//		prop.load(fis);
//		String targetUrl = prop.getProperty("cf_url");
//
//		ObjectMapper mapper = new ObjectMapper();
//		OAuth2AccessToken token = mapper.readValue(new File("cfuser.json"), OAuth2AccessToken.class);
//		CloudCredentials cred = new CloudCredentials(token);
//		CloudFoundryClient cfClient = new CloudFoundryClient(cred, new URL(targetUrl));	 
//		
//		System.out.println("listing services ...");
//		List<CloudServiceOffering> services = cfClient.getServiceOfferings();
//		
//		List<CloudServiceOffering> selServices = selectServices(services);
//		
//		if(selServices.size()==0){
//			System.out.println("nothing to export");
//			return;
//		} else{
//			for(CloudServiceOffering service : selServices){
//				selectServicePlan(service);
//			}
//		}
//	}

}
